# -*- coding: utf-8 -*-
"""Generator.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1a6NxIWKDa_dhI3ZbMRHR0DX5lh8WpwWF
"""

"""
Fibonacci implementation through generator.
"""
import inspect


def get_sequence(n):
    """
    Return Fibonacci sequence from zero to specified number as list.
    """
    def fib():
        """
        Return Fibonacci value by specified number as integer.

        """
        a, b = 0, 1
        while True:
            yield a
            a, b = b, a + b

    def sequence(_n):
        """
        Return sequence of Fibonacci values as list.
        """
        f = fib()
        return [f.__next__() for _ in range(_n + 1)]

    return sequence(n)


def get_code():
    """
    Return source code of Fibonacci sequence logic's implementation.
    """
    return inspect.getsource(get_sequence)